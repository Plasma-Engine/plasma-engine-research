[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "plasma-engine-research"
version = "0.1.0"
description = "Research automation service for Plasma Engine"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
  "fastapi==0.111.0",
  "uvicorn[standard]==0.30.1",
  "pydantic-settings==2.3.4",
  "loguru==0.7.2"
]

[project.optional-dependencies]
dev = [
  "pytest==8.3.2",
  "pytest-asyncio==0.23.8",
  "pytest-cov>=5.0.0",
  "pytest-mock>=3.14.0",
  "pytest-benchmark>=4.0.0",
  "pytest-timeout>=2.3.0",
  "httpx==0.27.0",
  "ruff==0.5.6",
  "mypy>=1.11.0",
  "black>=24.0.0",
  "psutil>=5.9.0"
]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-report=term-missing",
    "--cov-fail-under=90"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests"
]

[tool.coverage.run]
source = ["app"]
branch = true
omit = [
    "*/tests/*",
    "*/conftest.py",
    "*/__init__.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

